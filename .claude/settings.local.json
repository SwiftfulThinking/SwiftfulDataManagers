{
  "permissions": {
    "allow": [
      "Read(//Users/nicksarno/Documents/documents/GITHUB/SwiftfulStarterProject/**)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd UserManager2 using DocumentManagerSync from SwiftfulDataManagers\n\nCreated UserManager2 that inherits from DocumentManagerSync<UserModel> following the same pattern as ProgressManager, StreakManager, and ExperiencePointsManager.\n\nKey features:\n- Extends DocumentManagerSync for single document management\n- Real-time streaming of user document\n- Local persistence with FileManager\n- Custom event logging for user-specific actions\n- Field-specific update methods (saveUserName, saveUserEmail, etc.)\n\nDependencies will handle initialization with services, configuration, and logger.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(swift test --filter PendingWriteTests)",
      "Bash(git commit -m \"$(cat <<''EOF''\nAdd comprehensive tests for all 4 data manager classes\n\nCreated test suites for DocumentManagerSync, DocumentManagerAsync, CollectionManagerSync, and CollectionManagerAsync. Tests cover all public APIs including:\n\n- Initialization with and without cached data\n- Document/collection fetching (sync and async)\n- Save, update, and delete operations\n- Query operations with QueryBuilder\n- Error handling for not found scenarios\n- logIn/logOut functionality for sync managers\n\nAll 58 tests pass successfully. Tests use Mock implementations and properly handle Swift 6 concurrency.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git commit -m \"$(cat <<''EOF''\nUpdate LocalPersistence protocols to pass managerKey as parameter\n\nFollowing the SwiftfulGamification pattern, updated all LocalPersistence protocols to accept managerKey as a parameter in each method rather than storing it in the constructor. This provides more flexibility for implementations.\n\nChanges:\n- LocalDocumentPersistence: All methods now accept managerKey as first parameter\n- LocalCollectionPersistence: All methods now accept managerKey as first parameter\n- FileManagerDocumentPersistence: Updated to have empty init() and accept key in methods\n- SwiftDataCollectionPersistence: Keeps managerKey in init for ModelContainer, but methods also accept it\n- MockLocalDocumentPersistence: Uses wildcard pattern for default test data\n- MockLocalCollectionPersistence: Uses wildcard pattern for default test data\n- DocumentManagerSync: Updated to pass configuration.managerKey to all local persistence calls\n- CollectionManagerSync: Updated to pass configuration.managerKey to all local persistence calls\n\nAll 58 tests pass successfully.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}
